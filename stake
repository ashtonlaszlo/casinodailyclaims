// ==UserScript==
// @name         Stake Daily
// @namespace    http://tampermonkey.net/
// @version      2.6
// @description  Automatically claim daily bonus for stake.us
// @author       ashtonlaszlo
// @match        https://stake.us/?tab=dailyBonus&currency=btc&modal=wallet
// @grant        GM.setValue
// @grant        GM.getValue
// ==/UserScript==

(function() {
    'use strict';

    console.log('Tampermonkey script is running.');

    async function clickButton() {
        const button = document.querySelector('button[data-test="password-reset-button"]');
        if (button) {
            if (!button.disabled) {
                console.log('Button found and enabled:', button);
                button.focus(); // Focus on the button
                button.click(); // Attempt to click the button
                console.log('Button clicked!');

                // Create a mouse event and dispatch it for a more robust click
                const event = new MouseEvent('click', {
                    bubbles: true,
                    cancelable: true,
                    view: window
                });
                button.dispatchEvent(event);
                console.log('Dispatched mouse event for button click!');

                // Schedule the next click
                const nextClaimDateTime = new Date();
                nextClaimDateTime.setHours(nextClaimDateTime.getHours() + 24 + Math.random());
                await GM.setValue('nextClaimDateTime', nextClaimDateTime.toISOString());
                console.log('Next claim scheduled at:', nextClaimDateTime);
            } else {
                console.log('Button is disabled, retrying in 1 minute...');
                setTimeout(clickButton, 60000); // Retry every 1 minute until the button is enabled
            }
        } else {
            console.log('Button not found, retrying...');
            setTimeout(clickButton, 5000); // Retry every 5 seconds until the button is found
        }
    }

    async function init() {
        const nextClaimDateTimeString = await GM.getValue('nextClaimDateTime', null);
        const now = new Date();

        if (nextClaimDateTimeString) {
            const nextClaimDateTime = new Date(nextClaimDateTimeString);
            if (now >= nextClaimDateTime) {
                console.log('It is time to claim the bonus.');
                clickButton();
            } else {
                const timeToNextClaim = nextClaimDateTime - now;
                console.log('Next claim is scheduled at:', nextClaimDateTime, 'Waiting for', timeToNextClaim, 'ms');
                setTimeout(clickButton, timeToNextClaim);
            }
        } else {
            console.log('No next claim scheduled. Clicking the button now.');
            clickButton();
        }
    }

    // Initial delay before checking the next claim time
    setTimeout(init, 10000);
})();
