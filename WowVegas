// ==UserScript==
// @name         WowVegas Daily Bonus Claimer
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Automatically claim daily bonus on WowVegas
// @author       ashtonlaszlo
// @match        https://www.wowvegas.com/promotions/daily-coin-reward
// @grant        GM.xmlHttpRequest
// @grant        GM.setValue
// @grant        GM.getValue
// ==/UserScript==

(function() {
    'use strict';

    console.log('Tampermonkey script to keep WowVegas session alive and claim daily bonus is running.');

    const ONE_DAY_MS = 24 * 60 * 60 * 1000;

    function sendKeepAlive() {
        console.log('Sending keep-alive request...');
        GM.xmlHttpRequest({
            method: 'GET',
            url: 'https://www.wowvegas.com/promotions/daily-coin-reward',
            onload: function(response) {
                if (response.status === 200) {
                    console.log('Keep-alive request successful.');
                } else {
                    console.error('Keep-alive request failed:', response.status);
                }
            },
            onerror: function(response) {
                console.error('Keep-alive request error:', response);
            }
        });
    }

    function startKeepAlive() {
        sendKeepAlive();
        setInterval(sendKeepAlive, 5 * 60 * 1000);
    }

    function handleTabFocus() {
        console.log('Tab regained focus, starting keep-alive...');
        startKeepAlive();
    }

    startKeepAlive();
    window.addEventListener('focus', handleTabFocus);

    async function clickClaimButton() {
        const claimButton = document.querySelector('#__nuxt > div.dark\\:bg-zinc-900 > div.lg\\:pl-72.min-h-screen-ios.overflow-x-hidden.duration-200.lg\\:min-h-screen-ios > main > div > div > article.prose.max-w-none.py-2.text-start.dark\\:prose-invert.md\\:py-4 > button');
        if (claimButton) {
            console.log('Claim button found:', claimButton);
            claimButton.click();
            console.log('Claim button clicked.');
            scheduleNextClaim();
        } else {
            console.log('Claim button not found, retrying...');
            setTimeout(clickClaimButton, 5000);
        }
    }

    async function init() {
        const nextClaimDateTime = await GM.getValue('nextClaimDateTime', 0);
        const currentTime = Date.now();

        if (currentTime >= nextClaimDateTime) {
            console.log('It is time to claim the bonus.');
            setTimeout(clickClaimButton, 10000);
        } else {
            const waitTime = nextClaimDateTime - currentTime;
            console.log(`Next claim scheduled in ${waitTime / 1000 / 60 / 60} hours.`);
            setTimeout(init, waitTime);
        }
    }

    async function scheduleNextClaim() {
        const nextClaimDateTime = Date.now() + ONE_DAY_MS + (Math.random() * 60 * 60 * 1000);
        await GM.setValue('nextClaimDateTime', nextClaimDateTime);
        console.log('Next claim scheduled at:', new Date(nextClaimDateTime).toString());
    }

    setTimeout(init, 10000);
})();
